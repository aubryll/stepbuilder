<idea-plugin version="2">
  <id>online.devliving.stepbuilder.generator</id>
  <name>StepBuilder Generator</name>
  <version>1.0.2</version>
  <vendor email="mehedi@devliving.online" url="http://www.devliving.online">Mehedi Hasan Khan</vendor>

  <description><![CDATA[
    <p>This plugin generates a Builder class following the Step Builder pattern so that you can build instances of
    your class more easily in a guided manner. </p>

    <em>Here is an example:</em>
    <pre>
    <code>

   public class Server{

    final static int DEFAULT_PORT = 8080;

    private String protocol;
    private String url;
    private String ipAddress;
    private int port;
    private String description;
    private long uptime;

    private Server(Builder builder) {
        protocol = builder.protocol;
        url = builder.url;
        ipAddress = builder.ipAddress;
        port = builder.port;
        description = builder.description;
        uptime = builder.uptime;
    }

    public static IProtocol builder() {
        return new Builder();
    }


    public interface IBuild {
        Server build();
    }

    public interface IUptime {
        IBuild withUptime(long val);
    }

    public interface IDescription {
        IUptime withDescription(String val);
    }

    public interface IPort {
        IDescription withPort(int val);
    }

    public interface IIpAddress {
        IPort withIpAddress(String val);
    }

    public interface IUrl {
        IIpAddress withUrl(String val);
    }

    public interface IProtocol {
        IUrl withProtocol(String val);
    }

    public static final class Builder implements IUptime, IDescription, IPort, IIpAddress, IUrl, IProtocol, IBuild {
        private long uptime;
        private String description;
        private int port;
        private String ipAddress;
        private String url;
        private String protocol;

        private Builder() {
        }

        @Override
        public IBuild withUptime(long val) {
            uptime = val;
            return this;
        }

        @Override
        public IUptime withDescription(String val) {
            description = val;
            return this;
        }

        @Override
        public IDescription withPort(int val) {
            port = val;
            return this;
        }

        @Override
        public IPort withIpAddress(String val) {
            ipAddress = val;
            return this;
        }

        @Override
        public IIpAddress withUrl(String val) {
            url = val;
            return this;
        }

        @Override
        public IUrl withProtocol(String val) {
            protocol = val;
            return this;
        }

        public Server build() {
            return new Server(this);
        }
    }
}
    </code>
    </pre>
    ]]></description>

  <change-notes><![CDATA[
      <table>
      <tr>
      <td> 1.0.0</td>
      <td>First release</td>
      </tr>

      <tr>
      <td> 1.0.1</td>
      <td>Generated interfaces aren't public</td>
      </tr>

      <tr>
      <td> 1.0.2</td>
      <td>Added option so that you can choose whether to generate interfaces as public or not</td>
      </tr>
      </table>
    ]]>
  </change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <!-- <idea-version since-build="141.0"/> -->
  <idea-version since-build="123"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <!-- uncomment to enable plugin in all products
  <depends>com.intellij.modules.lang</depends>
  -->

  <extensions defaultExtensionNs="com.intellij">
    <!-- Add your extensions here -->
  </extensions>

  <actions>
    <!-- Add your actions here -->
      <action id="online.devliving.stepbuilder.generator.generate"
              class="online.devliving.stepbuilder.generator.StepBuilderAction"
              text="Step Builder" description="Generates a Builder following Step Builder pattern">
          <add-to-group group-id="GenerateGroup" anchor="after" relative-to-action="JavaGenerateGroup2"/>
          <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl S"/>
      </action>
  </actions>

</idea-plugin>